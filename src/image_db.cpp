#pragma once
#include "image_db.h"

image_db::image_db()
{
	static bool is_generate = true;
	if (is_generate) {
		generate();
		is_generate = false;
	}
}

std::vector<std::vector<unsigned>> image_db::get_image_by_name(const String& str)
{
	if (database.find(str) == database.end()) {
		// not fount
		return{};
	}
	return database[str];
}

void image_db::generate()
{
	typedef std::vector<std::vector<unsigned>> image;

	image GitHub = { {0x000000, 0xf8ff1b, 0x000000, 0x000000, 0x000000, 0x000000, 0xf8ff1b, 0x000000},
                   {0x000000, 0xf8ff1b, 0xf8ff1b, 0x000000, 0x000000, 0xf8ff1b, 0xf8ff1b, 0x000000}, 
                   {0x000000, 0xf8ff1b, 0xf8ff1b, 0xf8ff1b, 0xf8ff1b, 0xf8ff1b, 0xf8ff1b, 0x000000}, 
                   {0xf8ff1b, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xf8ff1b}, 
                   {0xf8ff1b, 0x000000, 0xf8ff1b, 0x000000, 0x000000, 0xf8ff1b, 0x000000, 0xf8ff1b}, 
                   {0xf8ff1b, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xf8ff1b}, 
                   {0x000000, 0xf8ff1b, 0x000000, 0xf8ff1b, 0xf8ff1b, 0x000000, 0xf8ff1b, 0x000000}, 
                   {0x000000, 0x000000, 0xf8ff1b, 0xf8ff1b, 0xf8ff1b, 0xf8ff1b, 0x000000, 0x000000}
	};
	image Heart = { {0x000000, 0xf50017, 0xf50017, 0x000000, 0x000000, 0xf50017, 0xf50017, 0x000000}, 
                  {0xf50017, 0xffffff, 0xf50017, 0xf50017, 0xf50017, 0xf50017, 0xf50017, 0xf50017}, 
                  {0xf50017, 0xf50017, 0xf50017, 0xf50017, 0xf50017, 0xf50017, 0xf50017, 0xf50017}, 
                  {0xf50017, 0xffffff, 0xf50017, 0xf50017, 0xf50017, 0xf50017, 0xf50017, 0xf50017}, 
                  {0x000000, 0xf50017, 0xffffff, 0xf50017, 0xf50017, 0xf50017, 0xf50017, 0x000000}, 
                  {0x000000, 0x000000, 0xf50017, 0xf50017, 0xf50017, 0xf50017, 0x000000, 0x000000}, 
                  {0x000000, 0x000000, 0x000000, 0xf50017, 0xf50017, 0x000000, 0x000000, 0x000000}, 
                  {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}
                  
	};

	image Sport = {{0xae1313, 0xae1313, 0xae1313, 0xae1313, 0xae1313, 0xae1313, 0xae1313, 0xae1313}, 
                  {0xae1313, 0xd11010, 0xd11010, 0xd11010, 0xd11010, 0xd11010, 0xd11010, 0xae1313}, 
                  {0xae1313, 0xe1e1db, 0xf60017, 0xf60017, 0xf60017, 0xf60017, 0xe1e1db, 0xae1313}, 
                  {0xc9c9c5, 0xffffff, 0xf60017, 0xf62c00, 0xf62c00, 0xf60017, 0xffffff, 0xc9c9c5}, 
                  {0xe1e1db, 0xffffff, 0xe1e1db, 0xe1e1db, 0xe1e1db, 0xcfcfc4, 0xffffff, 0xe1e1db}, 
                  {0xabab96, 0xffffff, 0xf60017, 0xf60017, 0xf60017, 0xf60017, 0xffffff, 0xa8a8a4}, 
                  {0xae1313, 0xe1e1db, 0xd11010, 0xd11010, 0xd11010, 0xd11010, 0xe1e1db, 0xae1313}, 
                  {0xae1313, 0xae1313, 0xae1313, 0xae1313, 0xae1313, 0xae1313, 0xae1313, 0xae1313}};

image Footbol = {{0x000000, 0x5d330f, 0x5d330f, 0x5d330f, 0x000000, 0x000000, 0x000000, 0x000000}, 
{0x000000, 0xedb7a0, 0xedb7a0, 0xedb7a0, 0x000000, 0x000000, 0x000000, 0x000000}, 
{0x840000, 0xff0000, 0xedb7a0, 0xed0000, 0x840000, 0x000000, 0x000000, 0x000000}, 
{0x840000, 0xff0000, 0xed0000, 0xff0000, 0x840000, 0x000000, 0x000000, 0x000000}, 
{0xedb7a0, 0xff0000, 0xff0000, 0xff0000, 0xedb7a0, 0x000000, 0x000000, 0x000000}, 
{0xedb7a0, 0xff0000, 0x000000, 0xff0000, 0xedb7a0, 0x000000, 0x000000, 0x000000}, 
{0x000000, 0xffffff, 0x000000, 0xffffff, 0x000000, 0x000000, 0xffffff, 0xffffff}, 
{0x000000, 0x0bff05, 0x094f0f, 0x0bff05, 0x094f0f, 0x000000, 0xffffff, 0xffffff}};


	database["GitHub"] = GitHub;
	database["Sport"] = Footbol;
}